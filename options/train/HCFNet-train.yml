# ------------------------------------------------------------------------
# Copyright (c) 2022 megvii-model. All Rights Reserved.
# ------------------------------------------------------------------------
# Modified from BasicSR (https://github.com/xinntao/BasicSR)
# Copyright 2018-2020 BasicSR Authors
# ------------------------------------------------------------------------
# general settings
name: HCFNet
model_type: HCFNet_with_RSBlur_model
scale: 1
num_gpu: 2
manual_seed: 42

save_HCDNet_for_training: false

datasets:
  train:
    name: HCBlur-train
    type: HCBlur_with_U_dataset
    dataroot_gt: ./datasets/HCBlur_Syn_train
    dataroot_lq: ./datasets/HCBlur_Syn_train
    dataroot_flows: ./datasets/HCBlur_Syn_train/shortUW_flows
    dataroot_uws: ./datasets/HCBlur_Syn_train/shortUW
    dataroot_deblur: ./datasets/HCBlur_Syn_train_HCDNet
    filename_tmpl: '{}'
    io_backend:
      type: disk

    inp_size: 960
    gt_size: 384
    use_flip: true
    use_rot: true

    # new params
    datalist: datalist/HCBlur_Syn_train.txt

    use_seqs_flow: true
    use_deblur: true
    use_short_sequences: true
    first_center: true
    RSBlur: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: HCBlur-val
    type: HCBlur_with_U_dataset
    dataroot_gt: ./datasets/HCBlur_Syn_val
    dataroot_lq: ./datasets/HCBlur_Syn_val
    dataroot_flows: ./datasets/HCBlur_Syn_val/shortUW_flows
    dataroot_uws: ./datasets/HCBlur_Syn_val/shortUW
    dataroot_deblur: results/HCDNet/visualization/HCBlur-val
    io_backend:
      type: disk

    # new params
    datalist: datalist/HCBlur_Syn_val.txt

    use_seqs_flow: true
    use_deblur: true
    use_short_sequences: true
    first_center: true

    RSBlur: false

network_g:
  type: HCFNet_Local
  width: 16
  middle_blk_num: 10
  middle_seqs_bkl_num: 10
  seqs_chan: 64
  train_size: [1, 3, 384, 384]
  train_alignment: true


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  RAFT:
    lr: 0.0001
    weight_decay: 0.0001
    betas: [ 0.9, 0.9 ]
  optim_g:
    type: AdamW
    lr: !!float 1e-3
    weight_decay: !!float 1e-3
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 150000
    eta_min: !!float 1e-7

  total_iter: 150000
  warmup_iter: 15000 # warm up for RAFT

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean

# validation settings
val:
  val_freq: 15000 #!!float 2e4
  save_img: false


  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
